{"version":3,"sources":["../src/routes.js"],"names":["router","config","require","knex","bcrypt","passport","localStrategy","Strategy","session","bodyParser","options","yelp","searchRequest","open_now","sort_by","categories","latitude","longitude","apiKey","client","comparePass","userPassword","databasePassword","compareSync","serializeUser","user","done","console","log","id","deserializeUser","where","first","then","catch","err","use","email","password","hashed_password","get","ctx","post","authenticate","info","status","login","body","isAuthenticated","logout","success","throw","saltRounds","new_user","insert","request","hashSync","profile_photo","full_name","location","returning","length","data","message","yelpCall","search","response","firstResult","jsonBody","prettyJson","JSON","stringify","e","currLat","req","currLon","users","select","parties","challenges","bars","new_party","invite","user_id","params","party_id","invite_response","andWhere","update","current_party","join","someDeet","new_challenge","complete_challenge","challenge_id","completed","completed_by","challenge_value","points","score_update","score","leave_party","isLeader","partyleader","end_party","complete","userparty"],"mappings":"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","file":"routes.js","sourcesContent":["import {\n  name,\n  version\n} from '../package.json';\nimport Router from 'koa-router';\n\nconst router = new Router();\nconst config = require('../knexfile')['development'];\nconst knex = require('knex')(config);\nconst bcrypt = require('bcrypt');\nconst passport = require('koa-passport');\nconst localStrategy = require('passport-local').Strategy;\nconst session = require('koa-session');\nconst bodyParser = require('koa-bodyparser');\nconst options = {};\nconst yelp = require('yelp-fusion');\nconst searchRequest = {\n  open_now: true,\n  sort_by: 'distance',\n  categories: 'bars',\n  latitude: 30.289270,\n  longitude: -97.705416\n};\nconst apiKey = 'OajGsHzjCPKSBq38RccMn2xV-WaMReCMpGxZdzP0N0N_M8jnrqjwgfOcLqsnbsMplCJATa2W7UWKzkTnxR7moN2IZNiOVsBqZdP6AQ4hjnLnkagnDTds4nwm1J14WnYx';\nconst client = yelp.client(apiKey);\n\nfunction comparePass(userPassword, databasePassword) {\n  return bcrypt.compareSync(userPassword, databasePassword);\n}\n// putting a conditional on post routes to check if party leader if limited\n// ~~~~~~~~~~~~~~~~~~~~Passport Shit~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\npassport.serializeUser((user, done) => {\n  console.log('serial killa');\n  done(null, user.id);\n});\n\npassport.deserializeUser((id, done) => {\n  console.log('ceramn l killed');\n  if (id) {\n    return knex('users').where({\n        id\n      }).first()\n      .then((user) => {\n        done(null, user);\n      })\n      .catch((err) => {\n        done(err, null);\n      });\n  }\n});\n\npassport.use(new localStrategy(options, (email, password, done) => {\n  knex('users').where({\n      email\n    }).first()\n    .then((user) => {\n      if (!user) return done(null, false);\n      if (!comparePass(password, user.hashed_password)) {\n        console.log('1');\n        return done(null, false);\n      } else {\n        console.log('2');\n        return done(null, user);\n      }\n    })\n    .catch((err) => {\n      return done(err);\n    });\n}));\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// let isLeader = async function(id){\n//   try {\n//   let yeah = await knex('users').join('parties','users.id','parties.partyleader').select('users.id');\n//   console.log(yeah[0].id,Number(id));\n// if (yeah[0].id === Number(id)) {ctx.body = true} else {ctx.body = false};\n// } catch(err) {\n//   ctx.status = 400;\n//   ctx.body = {\n//     status: 'error',\n//     message: 'ctx.request.body'|| 'Sorry, an error has occurred.'\n//   };\n// }\n// }\n\n// ~~~~~~~~~~~~~~~~~~Auth Routes & Register~~~~~~~~~~~~~~~~~~~~~~~~\n\nrouter.get('/login', async ctx => {\n\n});\n\nrouter.post('/login', async ctx => {\n  return passport.authenticate('local', (err, user, info, status) => {\n    if (user) {\n      ctx.login(user);\n      ctx.body = {\n        status: \"logged in foo\"\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: err,\n        user,\n        info,\n        status\n      };\n    }\n  })(ctx);\n});\n\nrouter.get('/logout', async (ctx) => {\n  if (ctx.isAuthenticated()) {\n    ctx.logout();\n    ctx.body = {\n      status: 'I Logged out fool'\n    };\n  } else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\nrouter.post('/register', async ctx => {\n  const saltRounds = 10;\n  try {\n\n    const new_user = await knex('users')\n      .insert({\n        email: ctx.request.body.email,\n        hashed_password: bcrypt.hashSync(ctx.request.body.password, saltRounds),\n        profile_photo: ctx.request.body.profile_photo,\n        full_name: ctx.request.body.full_name,\n        location: ctx.request.body.location,\n      })\n      .returning('*');\n\n    if (new_user.length) {\n      ctx.status = 201;\n      ctx.body = {\n        status: 'success',\n        data: ctx.request.body\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: 'error',\n        message: request.body || 'Something went wrong.'\n      };\n    }\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: err.message || 'Sorry, an error has occurred.'\n    };\n  }\n})\n\nlet yelpCall = function() {\n  return client.search(searchRequest).then(response => {\n    const firstResult = response.jsonBody;\n    const prettyJson = JSON.stringify(firstResult, null, 4);\n    console.log(firstResult);\n    return firstResult;\n  }).catch(e => {\n    console.log(e);\n  });\n}\n\n\n/*\n * GET /\n */\n//landing after login\nrouter.get('/landing', async ctx => {\nif (ctx.isAuthenticated()) {\n  try {\n\n    //location should come through hidden forms submitted on load and then be sent to make a route\n    const currLat = ctx.req.currLat;\n    const currLon = ctx.req.currLon;\n    const users = await knex('users').select('*');\n    const parties = await knex('parties').select('*');\n    const challenges = await knex('challenges').select('*')\n    let bars = await yelpCall();\n    ctx.body = {\n      status: 'success',\n      data: users,\n      parties,\n      challenges,\n      bars,\n    };\n  } catch (err) {\n    console.log(err)\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\n// On click of New Crawl provide yelp results to create route w/ mapbox on the frontend\n\nrouter.get('/new_route', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const currLat = ctx.req.currLat;\n    const currLon = ctx.req.currLon;\n    const users = await knex('users').select('*');\n    const parties = await knex('parties').select('*');\n    const challenges = await knex('challenges').select('*')\n    let bars = await yelpCall();\n    ctx.body = {\n      status: 'success',\n      data: users,\n      parties,\n      challenges,\n      bars,\n    };\n  } catch (err) {\n    console.log(err)\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n})\n\n// After route is determined choose that party send invites by email address\n//(Whoever clicks this is party leader)\n\nrouter.post('/new_party/:user_id', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const new_party = await knex('parties').insert(ctx.request.body).returning('*');\n    if (new_party.length) {\n      ctx.status = 201;\n      ctx.body = {\n        status: 'success',\n        data: ctx.request.body\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: 'error',\n        message: ctx.request.body || 'Something went wrong.'\n      };\n    }\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: ctx.request.body || 'Sorry, an error has occurred.'\n    };\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n})\n// id is the user id of who is being invited\nrouter.post('/send_invite/:party_id/:user_id', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const invite = await knex('user_party')\n      .insert({\n        user_id: ctx.params.user_id,\n        party_id: ctx.params.party_id\n      })\n      .returning('*');\n\n    if (invite.length) {\n      ctx.status = 201;\n      ctx.body = {\n        status: 'success',\n        data: ctx.request.body\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: 'error',\n        message: ctx.request.body || 'Something went wrong.'\n      };\n    }\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: ctx.request.body || 'Sorry, an error has occurred.'\n    };\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n})\n\nrouter.post('/invite_response/:user_id/:party_id', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const invite_response = await knex('user_party').where('party_id', '=', ctx.params.party_id).andWhere('user_id', '=', ctx.params.user_id).update({\n      response: ctx.request.body.response\n    }).returning('*');\n    if (invite_response.length) {\n      ctx.status = 201;\n      ctx.body = {\n        status: 'success',\n        data: ctx.request.body\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: 'error',\n        message: ctx.request.body || 'Something went wrong.'\n      };\n    }\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: ctx.request.body || 'Sorry, an error has occurred.'\n    };\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n})\n\n// party = user_party where party_id = url and response = true\nrouter.get('/current_party/:user_id/:party_id', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const current_party = await knex('users').join('user_party', 'users.id', 'user_party.user_id').select('full_name').where('party_id', ctx.params.party_id).andWhere('response', 'True').returning('*');\n    ctx.body = {\n      status: 'success',\n      data: current_party\n    };\n  } catch (err) {\n    console.log(err)\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n})\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~challenges~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nrouter.get('/challenges', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const users = await knex('users').select('*');\n    const parties = await knex('parties').select('*');\n    const challenges = await knex('challenges').select('*');\n    ctx.body = {\n      status: 'success',\n      data: users,\n      challenges,\n    };\n  } catch (err) {\n    console.log(err)\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\nrouter.get('/challenges/:id', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    let someDeet = ctx.params.id;\n    const users = await knex('users').select('*');\n    const parties = await knex('parties').select('*');\n    const challenges = await knex('challenges').select('*').where({\n      id: ctx.params.id\n    });\n    ctx.body = {\n      status: 'success',\n      data: users,\n      challenges,\n    };\n  } catch (err) {\n    console.log(err)\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\nrouter.post('/new_challenge', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const new_challenge = await knex('challenges').insert(ctx.request.body).returning('*');\n    if (new_challenge.length) {\n      ctx.status = 201;\n      ctx.body = {\n        status: 'success',\n        data: ctx.request.body\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: 'error',\n        message: ctx.request.body || 'Something went wrong.'\n      };\n    }\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: ctx.request.body || 'Sorry, an error has occurred.'\n    };\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n})\n\nrouter.post('/complete_challenge/:user_id/:challenge_id', async ctx => {\n  if (ctx.isAuthenticated()) {\n  try {\n    const complete_challenge = await knex('challenges').where({\n      id: ctx.params.challenge_id\n    }).update({\n      completed: 'True',\n      completed_by: ctx.params.user_id\n    }).returning('*');\n    const challenge_value = await knex('users').join('challenges', 'users.id', 'challenges.completed_by').select('points');\n    console.log(challenge_value[0].points)\n    const score_update = await knex('users').where({\n      id: ctx.params.user_id\n    }).update({\n      score: challenge_value[0].points\n    }).returning('*');\n    if (challenge_value.length) {\n      ctx.status = 201;\n      ctx.body = {\n        status: 'success',\n        data: ctx.request.body\n      };\n    } else {\n      ctx.status = 400;\n      ctx.body = {\n        status: 'error',\n        message: ctx.request.body || 'Something went wrong.'\n      };\n    }\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: ctx.request.body || 'Sorry, an error has occurred.'\n    };\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\n\nrouter.post('/leave_party/:user_id/:party_id', async ctx => {\nif (ctx.isAuthenticated()) {\n  const leave_party = await knex('user_party').where('party_id', '=', ctx.params.party_id).andWhere('user_id', '=', ctx.params.user_id).update({\n    response: false\n  }).returning('*');\n  if (invite_response.length) {\n    ctx.status = 201;\n    ctx.body = {\n      status: 'success',\n      data: ctx.request.body\n    };\n  } else {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: ctx.request.body || 'Something went wrong.'\n    };\n  }\n} else {\n  ctx.body = {\n    success: false\n  };\n  ctx.throw(401);\n}\n});\n\n\nrouter.get('/completed_parties/:user_id', async ctx => {\nif (ctx.isAuthenticated()) {\n  try {\n    const users = await knex('users').select('*');\n    const parties = await knex('parties').join('user_party', 'party.id', 'user_party.user_id').where('complete',true).select('*');\n    const challenges = await knex('challenges').select('*');\n    ctx.body = {\n      status: 'success',\n      data: parties, users, challenges\n\n    };\n  } catch (err) {\n    console.log(err)\n  }\n} else {\n  ctx.body = {\n    success: false\n  };\n  ctx.throw(401);\n}\n});\n\nrouter.get('/end_party/:user_id/:party_id', async ctx => {\nif (ctx.isAuthenticated()) {\n  try {\n    const isLeader = await knex('parties').select('partyleader').where('id', ctx.params.party_id);\n    console.log(ctx.params.user_id, isLeader[0].partyleader);\n    if (ctx.params.user_id == isLeader[0].partyleader) {\n      const end_party = await knex('parties').update({\n        complete: true\n      }).where('id', ctx.params.party_id);\n      if (end_party) {\n        ctx.status = 201;\n        ctx.body = {\n          status: 'success',\n          data: ctx.request.body\n        };\n      } else {\n        ctx.status = 400;\n        ctx.body = {\n          status: 'error',\n          message: ctx.request.body || 'Something went wrong.'\n        };\n      }\n    } else {\n      console.log('head')\n    };\n  } catch (err) {\n    ctx.status = 400;\n    ctx.body = {\n      status: 'error',\n      message: err.message || 'Sorry, an error has occurred.'\n    }\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\n// router.get('/users/:id', async ctx => {\n//\n//   try {\n//     let pulledId = ctx.params.id;\n//     const users = await knex('users').select('*').where({\n//       id: pulledId\n//     });\n//     const parties = await knex('parties').select('*');\n//     const challenges = await knex('challenges').select('*');\n//     ctx.body = {\n//       status: 'success',\n//       data: users,\n//     };\n//   } catch (err) {\n//     console.log(err)\n//   }\n// });\n\n\nrouter.get('/scoreboard/:party_id/:user_id', async ctx => {\nif (ctx.isAuthenticated()) {\n  try {\n    const users = await knex('users').select('*');\n    const parties = await knex('parties').select('*');\n    const userparty = await knex('user_party').select('*');\n    const challenges = await knex('challenges').select('*');\n    ctx.body = {\n      status: 'success',\n      data: parties,\n      userparty\n    };\n  } catch (err) {\n    console.log(err)\n  }} else {\n    ctx.body = {\n      success: false\n    };\n    ctx.throw(401);\n  }\n});\n\n\n\n\n\n\n\n\n\n\nexport default router;\n"]}